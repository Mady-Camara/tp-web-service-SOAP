
package service;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "BanqueService", targetNamespace = "http://service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface BanqueService {


    /**
     * 
     * @param id
     * @return
     *     returns service.Optional
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEtudiant", targetNamespace = "http://service/", className = "service.GetEtudiant")
    @ResponseWrapper(localName = "getEtudiantResponse", targetNamespace = "http://service/", className = "service.GetEtudiantResponse")
    @Action(input = "http://service/BanqueService/getEtudiantRequest", output = "http://service/BanqueService/getEtudiantResponse")
    public Optional getEtudiant(
        @WebParam(name = "ID", targetNamespace = "")
        Long id);

    /**
     * 
     * @return
     *     returns java.util.List<service.Etudiant>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getEtudiants", targetNamespace = "http://service/", className = "service.GetEtudiants")
    @ResponseWrapper(localName = "getEtudiantsResponse", targetNamespace = "http://service/", className = "service.GetEtudiantsResponse")
    @Action(input = "http://service/BanqueService/getEtudiantsRequest", output = "http://service/BanqueService/getEtudiantsResponse")
    public List<Etudiant> getEtudiants();

    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "createEtudiant", targetNamespace = "http://service/", className = "service.CreateEtudiant")
    @ResponseWrapper(localName = "createEtudiantResponse", targetNamespace = "http://service/", className = "service.CreateEtudiantResponse")
    @Action(input = "http://service/BanqueService/createEtudiantRequest", output = "http://service/BanqueService/createEtudiantResponse")
    public boolean createEtudiant(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @param arg2
     * @param arg1
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "updateEtudiant", targetNamespace = "http://service/", className = "service.UpdateEtudiant")
    @ResponseWrapper(localName = "updateEtudiantResponse", targetNamespace = "http://service/", className = "service.UpdateEtudiantResponse")
    @Action(input = "http://service/BanqueService/updateEtudiantRequest", output = "http://service/BanqueService/updateEtudiantResponse")
    public boolean updateEtudiant(
        @WebParam(name = "ID", targetNamespace = "")
        Long id,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        String arg2);

    /**
     * 
     * @param id
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteEtudiant", targetNamespace = "http://service/", className = "service.DeleteEtudiant")
    @ResponseWrapper(localName = "deleteEtudiantResponse", targetNamespace = "http://service/", className = "service.DeleteEtudiantResponse")
    @Action(input = "http://service/BanqueService/deleteEtudiantRequest", output = "http://service/BanqueService/deleteEtudiantResponse")
    public boolean deleteEtudiant(
        @WebParam(name = "ID", targetNamespace = "")
        Long id);

}
